/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package theatrebookingsystem;


import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.SwingConstants;
import static theatrebookingsystem.LoginUI.role_id;
import static theatrebookingsystem.LoginUI.roles;
/**
 *
 * @author 2018/E/070
 */
public class MovieCollection extends javax.swing.JFrame {

    /**
     * Creates new form MovieCollection
     */
    public MovieCollection() {
        initComponents();
        setSize(860, 640);
        setLocation(500,100);
//        setResizable(false);
    }

    
     static String movie_Name = "";
     static int _movieid =0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel12.setText("jLabel12");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("ROBINIA", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MOVIES");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(105, 6, 520, 41);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("THE EXPANDABLES");

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BATMAN DARK KNIGHT ");

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("FIGHT CLUB");

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("THE HANGOVER");

        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("FORD VS FERRARI");

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("FORREST GUMP");

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("JOHN WICK");

        jLabel9.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("TITANIC");

        jLabel10.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("JURASSIC PARK");

        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("REBECCA", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("PREDATOR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton1.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\fightclub.jpg"));
        jButton2.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\Batman.jpg"));
        jButton3.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\Expandables.jpg"));
        jButton4.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\Titanic.jpg"));
        jButton5.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\ford-vs-ferrari.jpg"));
        jButton6.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\ForrestGump.jpg"));
        jButton7.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\Hangover.jpg"));
        jButton8.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\Johnwick.jpg"));
        jButton9.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\Jurrasic park.jpg"));
        jButton10.setIcon(new ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\movies\\predator.jpg"));

        jScrollPane2.setViewportView(jPanel1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 60, 512, 510);

        jLabel14.setText("Movie : ");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(550, 110, 60, 30);

        jLabel15.setText("Type : ");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(550, 200, 60, 30);

        jLabel16.setText("Language : ");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(550, 380, 70, 30);

        jLabel17.setText("Time : ");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(550, 160, 80, 30);

        jLabel18.setText(" Details : ");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(541, 240, 60, 30);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(630, 380, 200, 30);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        getContentPane().add(jLabel19);
        jLabel19.setBounds(600, 110, 240, 30);

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        getContentPane().add(jLabel20);
        jLabel20.setBounds(600, 160, 240, 30);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        getContentPane().add(jLabel21);
        jLabel21.setBounds(600, 200, 240, 30);

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel22.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jLabel22);
        jLabel22.setBounds(610, 240, 230, 110);

        jButton11.setText("OK");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11);
        jButton11.setBounds(610, 550, 80, 32);

        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(630, 450, 200, 26);

        jLabel23.setText("Date");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(550, 450, 70, 20);

        jButton12.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jButton12.setText("<");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton12);
        jButton12.setBounds(24, 10, 70, 40);

        jLabel24.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Desktop\\PROJECT\\TheatreBookingSystem\\ss\\Purple Love.jpg")); // NOI18N
        jLabel24.setText("jLabel24");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(0, -4, 850, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    static HashMap<Timestamp,String> map = new HashMap<Timestamp,String>();    
   
    String username = "root";
    String password = "Lachu123@#";
    String url = "jdbc:mysql://127.0.0.1:3306/theatre_booking";
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        movie_Name = "The Dark Knight Rises";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        movie_Name = "The Expendables";
        jComboBox1.removeAllItems();
//        System.out.println("movie_name : "+movie_Name);
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        movie_Name = "Fight Club";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        movie_Name = "Ford Vs Ferrari";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        movie_Name = "Forrest Gump";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        movie_Name = "The HangOver";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        movie_Name = "john Wick";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        movie_Name = "Jurrasic Park";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        movie_Name = "Predator";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        movie_Name = "Titanic";
        jComboBox1.removeAllItems();
        try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "Select * from Movies where movie_name=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setString(1,movie_Name);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()){
//                StringBuffer str = new StringBuffer();
//                for(String s : rs.getString("movie_des").to){
//                    str.append(s);
//                }
                String str = "<html>"+rs.getString("movie_des")+"</html>";
                jLabel19.setText(rs.getString("movie_name"));
                jLabel20.setText(rs.getString("movie_hour"));
                jLabel21.setText(rs.getString("movie_type"));
                jLabel22.setMaximumSize(new Dimension(600,240));
                jLabel22.setText(str);
                jLabel13.setText(rs.getString("movie_lang"));
            }
            con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
             Connection connection = DriverManager.getConnection(url,username,password);
            
            String query1 = "select * from movies where movie_name=?";
            
            PreparedStatement psmt1 = connection.prepareStatement(query1);
            psmt1.setString(1,movie_Name);
            ResultSet rs1 = psmt1.executeQuery();
            
            if(rs1.next()){
                _movieid = Integer.parseInt(rs1.getString("movie_id"));
                System.out.println("_movieid  psmt1 : "+_movieid);
            }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        try{
           
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select * from movietimetable where movie_id=?";
            PreparedStatement psmt = con.prepareStatement(query);
            psmt.setInt(1,_movieid);
            ResultSet rs = psmt.executeQuery();
            
            while(rs.next()){
                  DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                  System.out.println("MovieCollection : "+rs.getTimestamp("timeday"));
                  Timestamp d = rs.getTimestamp("timeday");
                  map.put(rs.getTimestamp("timeday"),df.format(d).toString());
                  
                  jComboBox1.addItem(df.format(d).toString());
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        dispose();
        SeatBook seatBook = new SeatBook();
        seatBook.setVisible(true);
        
           try{
            Connection con = DriverManager.getConnection(url,username,password);
            String query = "select  * from seatbook where timedate=?";
            PreparedStatement psmt = con.prepareStatement(query);
            
            Timestamp sqlTime = new Timestamp(System.currentTimeMillis());
            
            for(Map.Entry<Timestamp,String> entry : MovieCollection.map.entrySet()){
                if(entry.getValue().equals(jComboBox1.getSelectedItem())){
                    sqlTime = entry.getKey();
                }
            }
            
          
            psmt.setTimestamp(1,sqlTime);
            ResultSet rs = psmt.executeQuery();
            
            if(rs.next()==false){
                for(Map.Entry<JButton,String> entry : SeatBook.seats.entrySet()){        
                       entry.getKey().setEnabled(true);
                   
               }
            }else{
                do{
               for(Map.Entry<JButton,String> entry : SeatBook.seats.entrySet()){
                   if(entry.getValue().equals(rs.getString("seatnames"))){        
                       entry.getKey().setBackground(Color.RED);
                       entry.getKey().setEnabled(false);
                       
                     if(!entry.getKey().isEnabled()){
                         entry.getKey().setBackground(Color.red);
                         
                     }
                      
                       
                   }
               }
            }while(rs.next());
            }
 
        }catch(Exception e){
            System.out.println("Error in checkAvailable function");
        }
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
       
        String username = "root";
        String password = "Lachu123@#";
         String url = "jdbc:mysql://127.0.0.1:3306/theatre_booking";
         try{
               String query3 = "SELECT * FROM roles where role_name=? and role_id=?";
               Connection connect = DriverManager.getConnection(url,username,password);
               PreparedStatement ps4 = connect.prepareStatement(query3); //PS1 PREPARED STATEMENT
               ps4.setString(1,LoginUI.usertext.getText());
               ps4.setInt(2,role_id);
               ResultSet rset2 = ps4.executeQuery();
                
               if(rset2.next()){
                 roles = rset2.getString("role_desc");
                 
              }
               System.out.println("role_desc : "+roles);
              }catch(Exception e){
                  System.out.println("error in roles");
              }
       
         if(roles.equals("customers")){
             dispose();
             MenuForm menu = new MenuForm();
              menu.jButton5.setEnabled(false);
              menu.setVisible(true);
         }else{
               dispose();
               new MenuForm().setVisible(true);

         }
        
        
        
        
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieCollection().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    public static javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
